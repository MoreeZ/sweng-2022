{"ast":null,"code":"var _jsxFileName = \"/home/moreez/Desktop/sweng/sweng-2022/src/components/qualityPage2.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport QualityInfo from './QualityInfo.jsx';\nimport featureSelection from '../images/FeatureSelectionResults.png';\nimport logerrorFitted from '../images/Fitted_graph.png';\nimport meanSqErr from '../images/mean_square_error.png';\nimport L1Explanation from '../images/L1Explanation.jpg';\nimport QQplot from '../images/QQPlot.png';\nimport FeatureImportance from '../images/feature_importance_2.png'; // The following component contains the contents  of the quality page.\n// The component is divided into 3 rows. First two rows have 2 columns.\n// Last row has one column. The columns contain the QualityInfo component\n// which takes in the props title, desc, image and optional desc2 image2\n// which will divide the component into 2 columns. (implemented in last row)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Quality extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: 30\n        },\n        children: \"Quality information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(QualityInfo, {\n            title: \"Basic Overview\",\n            desc: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"This is an alternative model user can choose which uses a combination of XGBoost and lightGBM. Both algorithms build upon: supervised machine learning, decision trees, ensemble learning, and gradient boosting.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"These two algorithms provide a Faster training speed, higher efficiency and lower memory usage compared to the rigid-regression algorithm.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Another purpose creating this model is to provide a different prediction with a different algorithm, so that the users are not limited to only one prediction, which sometimes can be less accurate than the other model in different situations. I believe having the second model will provide the users an opportunity to compare and choose the reasonable prediction generated.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true),\n            image: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(QualityInfo, {\n            title: \"Feature importance\",\n            desc: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"The feature of importance is obtained by XGBoost as well. The algorithm creates a multi- way tree \\u2014 each node can have two or more edges \\u2014 finding the categorical feature that will maximize the information gain using the impurity criterion entropy. After obtaining the feature of importance, 7 features are selected:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"text-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Bathroomcnt: Number of bathrooms in home including fractional bathrooms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Bedroomcnt: Number of bedrooms in home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Calculatedfinishedsquarefeet: Calculated total finished living area of the home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"finishedsquarefeet12: Finished living area\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"yearbuilt: The Year the principal residence was built\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"structuretaxvaluedollarcnt: The assessed value of the built structure on the parcel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"taxamount: The total property tax assessed for that assessment year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true),\n            image: FeatureImportance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-space-evenly\",\n        style: {\n          marginTop: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(QualityInfo, {\n            title: \"Log-error\",\n            desc: \"This graph is the fit graph on the test dataset for log error, and from this graph, we could discover that most of the original data falls in the center collectively and both sides of the upper and lower bounds separately. Since from the previous Q-Q plot, we know the original data is over-dispersed data, the fit line is not the standard straight line as well.\",\n            image: logerrorFitted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(QualityInfo, {\n            title: \"Mean-square error\",\n            desc: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n            image: meanSqErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(QualityInfo, {\n            title: \"Feature Selection\",\n            image: L1Explanation,\n            desc: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n            image2: featureSelection,\n            desc2: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quality;","map":{"version":3,"sources":["/home/moreez/Desktop/sweng/sweng-2022/src/components/qualityPage2.jsx"],"names":["React","Component","Container","Row","Col","QualityInfo","featureSelection","logerrorFitted","meanSqErr","L1Explanation","QQplot","FeatureImportance","Quality","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport QualityInfo from './QualityInfo.jsx';\n\nimport featureSelection from '../images/FeatureSelectionResults.png';\nimport logerrorFitted from '../images/Fitted_graph.png';\nimport meanSqErr from '../images/mean_square_error.png';\nimport L1Explanation from '../images/L1Explanation.jpg';\nimport QQplot from '../images/QQPlot.png';\nimport FeatureImportance from '../images/feature_importance_2.png'\n\n// The following component contains the contents  of the quality page.\n// The component is divided into 3 rows. First two rows have 2 columns.\n// Last row has one column. The columns contain the QualityInfo component\n// which takes in the props title, desc, image and optional desc2 image2\n// which will divide the component into 2 columns. (implemented in last row)\nclass Quality extends Component {\n    render() {\n        return (\n            <Container className=\"text-center\" fluid>\n                <h1 style={{ marginTop: 30 }}>Quality information</h1>\n                <Row style={{ marginTop: \"50px\" }}>\n                    <Col >\n                        <QualityInfo title={\"Basic Overview\"} desc={\n                            <>\n                                <p>This is an alternative model user can choose which uses a combination of XGBoost and\n                                    lightGBM. Both algorithms build upon: supervised machine learning, decision trees,\n                                    ensemble learning, and gradient boosting.</p>\n                                <p>These two algorithms provide a Faster training\n                                    speed, higher efficiency and lower memory usage compared to the rigid-regression\n                                    algorithm.</p>\n                                <p>Another purpose creating this model is to provide a different prediction with a\n                                    different algorithm, so that the users are not limited to only one prediction, which\n                                    sometimes can be less accurate than the other model in different situations. I believe having\n                                    the second model will provide the users an opportunity to compare and choose the\n                                    reasonable prediction generated.</p>\n                            </>\n                        } image={null} />\n                    </Col>\n                    <Col>\n                        <QualityInfo title={\"Feature importance\"} desc={\n                            <>\n                                <p>The feature of importance is obtained by XGBoost as well. The algorithm creates a multi-\n                                    way tree — each node can have two or more edges — finding the categorical feature that\n                                    will maximize the information gain using the impurity criterion entropy. After obtaining the\n                                    feature of importance, 7 features are selected:</p>\n                                <ul className=\"text-start\">\n                                    <li>Bathroomcnt: Number of bathrooms in home including fractional bathrooms</li>\n                                    <li>Bedroomcnt: Number of bedrooms in home</li>\n                                    <li>Calculatedfinishedsquarefeet: Calculated total finished living area of the home</li>\n                                    <li>finishedsquarefeet12: Finished living area</li>\n                                    <li>yearbuilt: The Year the principal residence was built</li>\n                                    <li>structuretaxvaluedollarcnt: The assessed value of the built structure on the parcel</li>\n                                    <li>taxamount: The total property tax assessed for that assessment year</li>\n                                </ul>\n                            </>\n                        } image={FeatureImportance} />\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-space-evenly\" style={{ marginTop: \"50px\" }}>\n                    <Col>\n                        <QualityInfo title={\"Log-error\"} desc={\"This graph is the fit graph on the test dataset for log error, and from this graph, we could discover that most of the original data falls in the center collectively and both sides of the upper and lower bounds separately. Since from the previous Q-Q plot, we know the original data is over-dispersed data, the fit line is not the standard straight line as well.\"} image={logerrorFitted} />\n                    </Col>\n                    <Col>\n                        <QualityInfo title={\"Mean-square error\"} desc={\n                            <>\n                            </>\n                        } image={meanSqErr} />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"50px\" }}>\n                    <Col>\n                        <QualityInfo title={\"Feature Selection\"} image={L1Explanation} desc={\n                            <>\n                            </>\n                        } image2={featureSelection} desc2={\n                            <>\n                            </>\n                        } />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Quality;\n"]},"metadata":{},"sourceType":"module"}