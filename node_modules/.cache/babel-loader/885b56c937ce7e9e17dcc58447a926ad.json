{"ast":null,"code":"var _jsxFileName = \"/home/moreez/Desktop/sweng/sweng-2022/src/components/secondModel.jsx\";\n\n/*\n@author: Eligijus Skersonas\n*/\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Features from './features2.jsx';\nimport QualityPage2 from './qualityPage2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SecondModel extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      yearBuilt: \"2005\",\n      taxAmount: \"6941.39\",\n      noOfBathrooms: \"2\",\n      noOfBedrooms: \"4\",\n      area: \"3633\",\n      house_price: \"223100\",\n      structuretaxvaluedollarcnt: \"218982\",\n      calculatedfinishedsquarefeet: \"3633\",\n      errors: {\n        yearBuilt: [],\n        taxAmount: [],\n        noOfBathrooms: [],\n        noOfBedrooms: [],\n        area: [],\n        house_price: [],\n        structuretaxvaluedollarcnt: [],\n        calculatedfinishedsquarefeet: []\n      },\n      errorQuantity: 0,\n      predictData: {}\n    };\n\n    this.handlePredict = data => {\n      // this is there the api data is fetched via axios\n      const postData = {\n        bathroomcnt: data.noOfBathrooms,\n        bedroomcnt: data.noOfBedrooms,\n        finishedsquarefeet12: data.area,\n        taxamount: data.taxAmount,\n        yearbuilt: data.yearBuilt,\n        house_price: data.house_price,\n        structuretaxvaluedollarcnt: data.structuretaxvaluedollarcnt,\n        calculatedfinishedsquarefeet: data.calculatedfinishedsquarefeet\n      }; // This is where the api call goes via axios.\n\n      axios.post(\"http://127.0.0.1:8000/predict-stacking\", postData).then(res => {\n        console.log(\"Post Request success\");\n        this.setState({\n          predictData: res.data\n        });\n      }).catch(err => {\n        console.log(\"Post Request error\");\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        \"alignItems\": \"center\",\n        minHeight: \"80vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: 40\n        },\n        children: \"XBoost Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Features, {\n        modelState: this.state,\n        handlePredict: this.handlePredict\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 350,\n          padding: 20,\n          backgroundColor: \"#212529\",\n          borderRadius: 20,\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Predicted house price: \", this.state.predictData[\"Pridicted house price\"] ? \"$\" + Math.round(this.state.predictData[\"Pridicted house price\"], 2) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QualityPage2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SecondModel;","map":{"version":3,"sources":["/home/moreez/Desktop/sweng/sweng-2022/src/components/secondModel.jsx"],"names":["axios","React","Component","Features","QualityPage2","SecondModel","state","yearBuilt","taxAmount","noOfBathrooms","noOfBedrooms","area","house_price","structuretaxvaluedollarcnt","calculatedfinishedsquarefeet","errors","errorQuantity","predictData","handlePredict","data","postData","bathroomcnt","bedroomcnt","finishedsquarefeet12","taxamount","yearbuilt","post","then","res","console","log","setState","catch","err","render","display","flexDirection","minHeight","marginTop","width","padding","backgroundColor","borderRadius","color","Math","round"],"mappings":"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","sourcesContent":["/*\n@author: Eligijus Skersonas\n*/\n\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Features from './features2.jsx';\nimport QualityPage2 from './qualityPage2';\n\nclass SecondModel extends Component {\n  state = {\n    yearBuilt: \"2005\",\n    taxAmount: \"6941.39\",\n    noOfBathrooms: \"2\",\n    noOfBedrooms: \"4\",\n    area: \"3633\",\n    house_price: \"223100\",\n    structuretaxvaluedollarcnt: \"218982\",\n    calculatedfinishedsquarefeet: \"3633\",\n    errors: {\n      yearBuilt: [],\n      taxAmount: [],\n      noOfBathrooms: [],\n      noOfBedrooms: [],\n      area: [],\n      house_price: [],\n      structuretaxvaluedollarcnt: [],\n      calculatedfinishedsquarefeet: [],\n    },\n    errorQuantity: 0,\n    predictData: {}\n  };\n\n  handlePredict = (data) => {\n    // this is there the api data is fetched via axios\n    const postData = {\n      bathroomcnt: data.noOfBathrooms,\n      bedroomcnt: data.noOfBedrooms,\n      finishedsquarefeet12: data.area,\n      taxamount: data.taxAmount,\n      yearbuilt: data.yearBuilt,\n      house_price: data.house_price,\n      structuretaxvaluedollarcnt: data.structuretaxvaluedollarcnt,\n      calculatedfinishedsquarefeet: data.calculatedfinishedsquarefeet\n    }\n\n    // This is where the api call goes via axios.\n    axios.post(\"http://127.0.0.1:8000/predict-stacking\", postData).then(res=>{\n      console.log(\"Post Request success\");\n      this.setState({predictData: res.data});\n    }).catch(err=>{\n      console.log(\"Post Request error\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{display: \"flex\", flexDirection: \"column\", \"alignItems\": \"center\", minHeight: \"80vh\"}}>\n        <h1 style={{marginTop: 40}}>XBoost Model</h1>\n        <Features modelState={this.state} handlePredict={this.handlePredict} />\n        <div style={{ width: 350, padding: 20, backgroundColor: \"#212529\", borderRadius: 20, color: \"white\" }}>\n          <div>Predicted house price: {this.state.predictData[\"Pridicted house price\"] ? \"$\" + Math.round(this.state.predictData[\"Pridicted house price\"], 2) : null}</div>\n        </div>\n        <QualityPage2/>\n      </div>\n    )\n  }\n}\n\nexport default SecondModel;\n"]},"metadata":{},"sourceType":"module"}