{"ast":null,"code":"var _jsxFileName = \"/home/moreez/Desktop/sweng/sweng-2022/src/components/firstModel.jsx\";\n\n/*\n@author: Eligijus Skersonas, Oskar Mroz\n*/\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport QualityPage from './qualityPage1';\nimport Features from './features1.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FirstModel extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      yearBuilt: \"1969\",\n      taxAmount: \"4542.86\",\n      noOfBathrooms: \"2\",\n      noOfBedrooms: \"3\",\n      area: \"1476\",\n      house_price: \"10000\",\n      errors: {\n        yearBuilt: [],\n        taxAmount: [],\n        noOfBathrooms: [],\n        noOfBedrooms: [],\n        area: [],\n        house_price: []\n      },\n      errorQuantity: 0,\n      predictData: {}\n    };\n\n    this.handlePredict = data => {\n      console.log(\"Pressed handlePredict\");\n      const postData = {\n        bathroomcnt: parseInt(data.noOfBathrooms),\n        bedroomcnt: parseInt(data.noOfBedrooms),\n        finishedsquarefeet12: parseFloat(data.area),\n        taxamount: parseFloat(data.taxAmount),\n        yearbuilt: parseInt(data.yearBuilt),\n        house_price: parseFloat(data.house_price)\n      }; // This is where the api call goes via axios.\n\n      axios.post(\"http://127.0.0.1:8000/predict\", postData).then(res => {\n        console.log(\"Post Request success\");\n        this.setState({\n          predictData: res.data\n        });\n      }).catch(err => {\n        console.log(\"Post Request error\");\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        \"alignItems\": \"center\",\n        minHeight: \"80vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: 40\n        },\n        children: \"Ridge Regression Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Features, {\n        modelState: this.state,\n        handlePredict: this.handlePredict\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 350,\n          padding: 20,\n          backgroundColor: \"#212529\",\n          borderRadius: 20,\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Predicted house price: \", this.state.predictData[\"Pridicted house price\"] ? Math.round(this.state.predictData[\"Pridicted house price\"], 2) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QualityPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FirstModel;","map":{"version":3,"sources":["/home/moreez/Desktop/sweng/sweng-2022/src/components/firstModel.jsx"],"names":["axios","React","Component","QualityPage","Features","FirstModel","state","yearBuilt","taxAmount","noOfBathrooms","noOfBedrooms","area","house_price","errors","errorQuantity","predictData","handlePredict","data","console","log","postData","bathroomcnt","parseInt","bedroomcnt","finishedsquarefeet12","parseFloat","taxamount","yearbuilt","post","then","res","setState","catch","err","componentDidUpdate","render","display","flexDirection","minHeight","marginTop","width","padding","backgroundColor","borderRadius","color","Math","round"],"mappings":"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","sourcesContent":["/*\n@author: Eligijus Skersonas, Oskar Mroz\n*/\n\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport QualityPage from './qualityPage1';\nimport Features from './features1.jsx'\n\nclass FirstModel extends Component {\n  state = {\n    yearBuilt: \"1969\",\n    taxAmount: \"4542.86\",\n    noOfBathrooms: \"2\",\n    noOfBedrooms: \"3\",\n    area: \"1476\",\n    house_price: \"10000\",\n    errors: {\n      yearBuilt: [],\n      taxAmount: [],\n      noOfBathrooms: [],\n      noOfBedrooms: [],\n      area: [],\n      house_price: []\n    },\n    errorQuantity: 0,\n    predictData: {}\n\n  };\n\n  handlePredict = (data) => {\n    console.log(\"Pressed handlePredict\");\n    const postData = {\n      bathroomcnt: parseInt(data.noOfBathrooms),\n      bedroomcnt: parseInt(data.noOfBedrooms),\n      finishedsquarefeet12: parseFloat(data.area),\n      taxamount: parseFloat(data.taxAmount),\n      yearbuilt: parseInt(data.yearBuilt),\n      house_price: parseFloat(data.house_price)\n    }\n\n    // This is where the api call goes via axios.\n    axios.post(\"http://127.0.0.1:8000/predict\", postData).then(res=>{\n      console.log(\"Post Request success\");\n      this.setState({predictData: res.data});\n    }).catch(err=>{\n      console.log(\"Post Request error\");\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n      <div style={{display: \"flex\", flexDirection: \"column\", \"alignItems\": \"center\", minHeight: \"80vh\"}}>\n        <h1 style={{marginTop: 40}}>Ridge Regression Model</h1>\n        <Features modelState={this.state} handlePredict={this.handlePredict}/>\n        <div style={{width: 350, padding: 20, backgroundColor: \"#212529\", borderRadius: 20, color: \"white\"}}>\n          <div>Predicted house price: {this.state.predictData[\"Pridicted house price\"] ? Math.round(this.state.predictData[\"Pridicted house price\"], 2) : null }</div>  \n        </div>\n        <QualityPage/>\n      </div>\n    )\n  }\n}\n\nexport default FirstModel;\n"]},"metadata":{},"sourceType":"module"}